generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Users {
    id          String            @id @default(cuid())
    name        String
    email       String
    password    String
    role        String            @default("user")
    lastLogin   DateTime          @default(now())
    createdAt   DateTime          @default(now()) @map("created_at")
    updatedAt   DateTime          @default(now()) @updatedAt @map("updated_at")
    permissions UserPermissions[]

    @@map("users")
}

model Permissions {
    name            String            @id @unique
    createdAt       DateTime          @default(now()) @map("created_at")
    updatedAt       DateTime          @default(now()) @updatedAt @map("updated_at")
    UserPermissions UserPermissions[]

    @@map("permissions")
}

model UserPermissions {
    userId         String      @map("user_id")
    permissionName String      @map("permission_name")
    createdAt      DateTime    @default(now()) @map("created_at")
    updatedAt      DateTime    @default(now()) @updatedAt @map("updated_at")
    user           Users       @relation(fields: [userId], references: [id])
    permission     Permissions @relation(fields: [permissionName], references: [name])

    @@unique([userId, permissionName])
    @@map("user_permissions")
}

model Media {
    id        String   @id @default(cuid())
    url       String
    type      String   @default("image")
    alt       String
    title     String
    cta       String?
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
    Blog      Blog[]

    @@map("media")
}

model BlogCategory {
    id        String   @id @default(cuid())
    name      String
    slug      String   @unique
    active    Boolean  @default(true)
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
    Blog      Blog[]

    @@map("blog_categories")
}

model Blog {
    id                 String       @id @default(cuid()) @map("blog_id")
    title              String
    synopsis           String
    bannerId           String       @map("banner_id")
    banner             Media        @relation(fields: [bannerId], references: [id])
    authorName         String
    readingTimeSeconds Int
    slug               String       @unique
    published          Boolean      @default(false)
    publishedAt        DateTime     @map("published_at")
    contentJson        Json         @map("content_json")
    tags               String[]     @default([])
    tagsString         String       @default("") @map("tags_string")
    categoryId         String       @map("category_id")
    category           BlogCategory @relation(fields: [categoryId], references: [id])

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    @@index([slug])
    @@map("blogs")
}
